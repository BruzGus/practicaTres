package todoUI;

import apiClient.FactoryRequest;
import io.qameta.allure.Attachment;
import io.qameta.allure.Description;
import io.qameta.allure.Owner;
import io.qameta.allure.Step;
import io.qameta.allure.junit4.DisplayName;
import io.restassured.response.Response;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;

public class VulnerabilityTest {
    @Before
    public void before(){}


    @Test
    @DisplayName("Verify the vulnerability OWASP")
    @Description("This test case is to verify the attack of vulnerability using owasp with the last pluggins")
    @Owner("BRYAN AUGUSTO CRUZ CASTRO")
    public void verifyVulnerabilityScanTest() throws InterruptedException {
        String Id=startScanningOWASP();
        monitoringStateAttach(Id);
    }

    @After
    public void after(){

        generateReportHTML();
    }

    //metodo para poder adjuntar datos
    @Attachment(value = "{0}",type = "text/html")
    public static String attachHtmlFile(String name, String html){
        return html;
    }



    @Step("Start Vulnerability test using OWASP ZAP")
    public String startScanningOWASP(){
        String url ="https://todoist.com";
        String startScanner="http://127.0.0.1:8888/JSON/ascan/action/scan/?url=\""+url+"\"&recurse=&inScopeOnly=&scanPolicyName=&method=&postData=&contextId=";
        Response response = FactoryRequest.make("get").send(startScanner);
        response.prettyPrint();

        String scanId = response.then().extract().path("scan");
        System.out.println("ID :"+ scanId);
        return scanId;
    }

    @Step("Monitoring Scan of OWASP ZAP 100%")
    public void monitoringStateAttach(String id) throws InterruptedException {
        String getStateUrl ="http://127.0.0.1:8888/JSON/ascan/view/status/?scanId="+id;
        String isComplete ="";
        while(!isComplete.equals("100")){
            Thread.sleep(10000);
            Response responseStatus = FactoryRequest.make("get").send(getStateUrl);
            isComplete=responseStatus.then().extract().path("status");
            System.out.println("OWASP STATUS: "+isComplete+" %");

        }
    }

    public void generateReportHTML(){
        String getReportHtml = "http://127.0.0.1:8888/OTHER/core/other/htmlreport/";
        Response responseReport = FactoryRequest.make("get").send(getReportHtml);
        String htmlReport=responseReport.body().asString();
        attachHtmlFile("OWAP Report vulnerability detail",htmlReport);
    }
}
